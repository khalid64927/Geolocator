ext {
    VERSION_NAME = simpleReleaseVersionName()
    VERSION_CODE = commitCount()
    CANONICAL_VERSION_NAME = canonicalReleaseVersionName()
    BRANCH_NAME = branchName()
    COMMIT_HASH = commitHash()
}

apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'
apply plugin: 'com.google.gms.google-services'
// Add the Crashlytics Gradle plugin
apply plugin: 'com.google.firebase.crashlytics'

android {
    compileSdk compileSdkVer
    buildToolsVersion = buildToolsVer

    defaultConfig {
        applicationId APPLICATION_ID
        multiDexEnabled true

        minSdkVersion 21
        targetSdkVersion targetSdkVer
        versionCode VERSION_CODE
        versionName VERSION_NAME
        vectorDrawables.useSupportLibrary = true
        useLibrary 'org.apache.http.legacy'
    }

    signingConfigs {
        try {
            debug {
                storeFile file(DEBUG_KEYSYORE_PATH)
                storePassword DEBUG_STORE_PASSWORD
                keyAlias DEBUG_KEYSTORE_ALLIAS
                keyPassword DEBUG_KEY_PASSWORD
            }
        }
        catch (final ignored) {
            throw new java.security.spec.InvalidKeySpecException('You should define DEBUG_KEYSTORE_ALLIAS, DEBUG_STORE_PASSWORD, DEBUG_KEY_PASSWORD in gradle.properties.')
        }
        try {
            release {
                storeFile file(RELEASE_KEYSYORE_PATH)
                storePassword RELEASE_STORE_PASSWORD
                keyAlias RELEASE_KEYSTORE_ALIAS
                keyPassword RELEASE_KEY_PASSWORD
            }
        } catch (final ignored) {
            throw new java.security.spec.InvalidKeySpecException('You should define RELEASE_KEYSTORE_ALIAS, RELEASE_STORE_PASSWORD, RELEASE_KEY_PASSWORD in gradle.properties.')
        }
    }

    buildTypes {
        debug {
            signingConfig signingConfigs.debug
            applicationIdSuffix ""
            pseudoLocalesEnabled true
            debuggable true
            minifyEnabled false
            crunchPngs false
            shrinkResources false
            zipAlignEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
        release {
            signingConfig signingConfigs.release
            pseudoLocalesEnabled false
            debuggable false
            minifyEnabled true
            crunchPngs true
            shrinkResources true
            zipAlignEnabled true
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }

    // region compile options

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_11
        targetCompatibility JavaVersion.VERSION_11
    }

    // endregion

    // region compile options

    kotlinOptions {
        jvmTarget = JavaVersion.VERSION_11
    }

    // endregion

    // region bundle config

    bundle {
        density {
            enableSplit true
        }
        abi {
            enableSplit true
        }
        language {
            enableSplit false
        }
    }

    // endregion

    // region lint options https://developer.android.com/studio/write/lint#gradle

    lintOptions {
        disable 'InvalidPackage'
        abortOnError false        // true by default
        checkAllWarnings false
        checkReleaseBuilds false
        ignoreWarnings true       // false by default
        quiet true                // false by default
        ignoreTestSources true
        checkDependencies true
        tasks.lint.enabled = false
    }

    // endregion

    buildFeatures {
        viewBinding true
    }
}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])

    implementation project(':Geolocator')

    implementation libs.applicationProvider
    implementation libs.androidResourceExtensions

    implementation libs.rxpermissions
    implementation libs.rx2java
    implementation libs.rx2Android
    implementation libs.rx2Kotlin

    implementation libs.gson
    implementation libs.timber

    implementation libs.mapsUtilsKtx
    implementation libs.mapsKtx
    implementation libs.playServicesMaps
    implementation libs.playServicesLocation

    implementation libs.navigationUiKtx
    implementation libs.navigationFragmentKtx

    implementation libs.preferenceKtx

    implementation libs.appcompat
    implementation libs.coreKtx
    implementation libs.material
    implementation libs.constraintLayout
    // Firebase dynamic links
    implementation "com.google.firebase:firebase-auth-ktx:22.0.0"
    implementation "com.google.firebase:firebase-invites:17.0.0"
    implementation "com.google.firebase:firebase-dynamic-links-ktx:21.1.0"
    // For an optimal experience using Dynamic Links, add the Firebase SDK
    // for Google Analytics. This is recommended, but not required.
    implementation 'com.google.firebase:firebase-analytics:21.2.2'
    implementation "com.google.firebase:firebase-database-ktx:20.2.1"
    implementation 'com.google.firebase:firebase-crashlytics-ktx:18.3.7'

    // Appsflyer
    implementation 'com.appsflyer:af-android-sdk:6.9.0'
    implementation 'com.android.installreferrer:installreferrer:1.1.2'
    implementation('com.google.code.gson:gson:2.8.6')

    //Xiaomi GetApps store referrer for apps flyer
    implementation "com.miui.referrer:homereferrer:1.0.0.6"
}

configurations.all {
    resolutionStrategy.cacheDynamicVersionsFor 120, 'minutes'
    (libs).each {
        resolutionStrategy.force it.value
    }
}
